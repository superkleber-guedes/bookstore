/*
 * Books API
 *
 * API that manages a collection of books in a fictional store
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Kleber.Bookstore.Models
{
    [DataContract]
    public partial class BadRequestResponse
    {
        public BadRequestResponse(string error)
        {
            Errors = new List<string>() { error };
        }

        public BadRequestResponse(List<string> errors)
        {
            Errors = errors;
        }

        /// <summary>
        /// Error messages
        /// </summary>
        /// <value>Error messages</value>

        [DataMember(Name="errors")]
        public List<string> Errors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("BadRequest Response: {\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }
}
